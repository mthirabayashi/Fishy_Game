{"version":3,"sources":["webpack:///webpack/bootstrap 3676206da51fbbdc6824","webpack:///./lib/fishy.js","webpack:///./lib/game.js","webpack:///./lib/hero.js","webpack:///./lib/fish.js","webpack:///./lib/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,cAAc;AAC3D;AACA;AACA,EAAC;;;;;;;ACjCD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oBAAmB,OAAO;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;;;;;;AC5DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA,IAAG;AACH;AACA;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;AACH;AACA;AACA,IAAG;;AAEH;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;;AAEA","file":"./lib/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3676206da51fbbdc6824","const Game = require(\"./game.js\");\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  // let canvasEl = document.getElementById('canvas');\n  // const content = canvasEl.getContext(\"2d\");\n  // content.strokeRect(0,0,1000,500);\n  // const game = new Game(content);\n  const canvas = document.getElementById(\"canvas\");\n  const stage = new createjs.Stage(canvas);\n\n  //Create a Shape DisplayObject.\n  // const circle = new createjs.Shape();\n  // circle.graphics.beginFill(\"red\").drawCircle(0, 0, 40);\n  // //Set position of Shape instance.\n  // circle.x = circle.y = 50;\n  // //Add Shape instance to stage display list.\n  // stage.addChild(circle);\n  // //Update stage will render next frame\n  // stage.update();\n\n  const game = new Game(stage);\n\n  // createjs.Ticker.addEventListener(\"tick\", handleTick);\n  //\n  // function handleTick() {\n  //  //Circle will move 10 units to the right.\n  //     circle.x += 10;\n  //     createjs.Ticker.timingMode = createjs.Ticker.RAF_SYNCHED;\n  //     createjs.Ticker.setFPS(900);\n  //     //Will cause the circle to wrap back\n  //     if (circle.x > stage.canvas.width) { circle.x = 0; }\n  //     stage.update();\n  // }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/fishy.js\n// module id = 0\n// module chunks = 0","const Hero = require(\"./hero.js\");\nconst Fish = require(\"./fish.js\");\nconst Util = require(\"./util\");\n\nclass Game {\n  constructor(stage) {\n    // this.draw(stage);\n    this.hero = [];\n    this.fish = [];\n    this.borders = [];\n    this.createHero(stage);\n    this.createFish.bind(this)(stage);\n    this.detectCollision(stage);\n  }\n\n  draw(canvas) {\n    // canvas.strokeRect(0,0,100,50);\n  }\n\n  createHero(stage) {\n    const hero = new Hero(stage);\n    this.hero = [hero];\n  }\n\n  createFish(stage) {\n    for (let i = 0; i < 5; i++) {\n      const fish = new Fish(stage);\n      this.fish = this.fish.concat(fish);\n    }\n    stage.update();\n  }\n\n  allObjects() {\n    return [].concat(this.hero).concat(this.fish);\n  }\n\n  detectCollision(stage) {\n    createjs.Ticker.addEventListener(\"tick\", handleTick.bind(this));\n    function handleTick(e) {\n      this.borders.forEach( border => {\n        stage.removeChild(border);\n      });\n      let newFish;\n      this.fish.forEach((el, idx) => {\n        el.fish.width = el.fish.image.width*el.fish.scaleX;\n        el.fish.height = el.fish.image.height*el.fish.scaleX;\n        // debugger;\n        el.fish.x += el.fishX;\n        if (Util.wrap(el, stage)) {\n          stage.removeChild(el.fish);\n          newFish = [].concat(this.fish.splice(0,idx).concat(this.fish.splice(1)));\n          this.fish = newFish;\n        }\n        if (Util.collision(el, this.hero[0])) {\n          console.log('collision!');\n          if (el.fish.width > this.hero[0].hero.width) {\n            createjs.Ticker.reset();\n            const gg = new createjs.Text(\"Game Over\", \"40px Arial\", \"#05B\");\n            gg.outline = 5;\n            gg.shadow = 10;\n            gg.x = 300;\n            gg.y = 200;\n            stage.addChild(gg);\n            stage.removeChild(this.hero[0].hero);\n            stage.update();\n            return;\n          }\n          stage.removeChild(el.fish);\n          newFish = [].concat(this.fish.splice(0,idx).concat(this.fish.splice(1)));\n          this.fish = newFish;\n          this.hero[0].hero.scaleX += .025;\n          this.hero[0].hero.scaleY += .025;\n        }\n      this.borders = this.borders.concat(Util.createFishBorder(el, stage));\n\n      });\n      if (Math.floor(Math.random() * 15) === 3) {\n        console.log(stage.children.length);\n        if (stage.children.length < 20) {\n          const fish = new Fish(stage);\n          this.fish = this.fish.concat(fish);\n        }\n      }\n      this.borders = this.borders.concat(Util.createHeroBorder(this.hero[0], stage));\n      stage.update();\n    }\n  }\n\n}\n\nmodule.exports = Game;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/game.js\n// module id = 1\n// module chunks = 0","\nclass Hero {\n  constructor(stage) {\n    this.hero = this.draw(stage);\n    this.heroX = 0;\n    this.heroY = 0;\n  }\n\n  draw(stage) {\n    const hero = new createjs.Bitmap(\"./images/hero_transparent.png\");\n    hero.scaleX=0.2;\n    hero.scaleY=0.2;\n    hero.x = stage.canvas.width / 2;\n    hero.y = stage.canvas.height / 2;\n\n    console.log(hero);\n    // debugger\n\n    stage.addChild(hero);\n\n    addEventListener('keypress', (e) => {\n      // console.log(e);\n      if (e.key === 'a') {\n        // debugger\n        if (this.heroX > -10) {\n          this.heroX -= 3;\n          if (this.hero.rotation > 0) {\n            this.hero.rotation = 0;\n            this.hero.skewX = 0;\n            // this.hero.x -= 75;\n            this.hero.x -= (this.hero.image.width*this.hero.scaleX);\n          }\n        }\n      } else if (e.key === 'd') {\n        if (this.heroX < 10) {\n          this.heroX += 3;\n          if (this.hero.rotation === 0) {\n            this.hero.rotation = 180;\n            this.hero.skewX = 180;\n            // this.hero.x += 75;\n            this.hero.x += (this.hero.image.width*this.hero.scaleX);\n          }\n        }\n      } else if (e.key === 'w') {\n        if (this.heroY > -10) {\n          this.heroY -= 3;\n        }\n      } else if (e.key === 's') {\n        if (this.heroY < 10) {\n          this.heroY += 3;\n        }\n      }\n      // console.log(this.hero);\n      stage.update();\n    });\n    createjs.Ticker.addEventListener(\"tick\", handleTick.bind(this));\n    function handleTick(e) {\n      // console.log(e);\n      // console.log(stage.canvas.height);\n\n      hero.x += this.heroX;\n      hero.y += this.heroY;\n      hero.width = hero.image.width * hero.scaleX;\n      hero.height = hero.image.height * hero.scaleY;\n      const heroCenterX = hero.x + hero.width/2;\n      const heroCenterY = hero.y + hero.height/2;\n      // debugger\n      // console.log(hero.x);\n      // console.log(heroCenterX);\n      // console.log(stage.canvas.width);\n      if (this.hero.rotation===0){\n        if (heroCenterX > stage.canvas.width) {\n          hero.x = 0;\n        } else if (heroCenterX < 0) {\n          hero.x = stage.canvas.width - hero.width/2;\n        }\n      } else {\n        // console.log(hero.x - hero.width/2);\n        if (hero.x - hero.width/2 > stage.canvas.width) {\n          hero.x = hero.width/2;\n        } else if (heroCenterX < 0) {\n          hero.x = stage.canvas.width - hero.width/2;\n        }\n      }\n      // if (hero.x > stage.canvas.width) {\n      //   hero.x = 0;\n      // } else if (hero.x < 0) {\n      //   hero.x = stage.canvas.width;\n      // }\n      if (hero.y > stage.canvas.height-hero.height/2) {\n        hero.y = stage.canvas.height-hero.height/2;\n        this.heroY = 0;\n      } else if (hero.y < 0-hero.height/2) {\n        hero.y = 0-hero.height/2;\n        this.heroY = 0;\n      }\n\n      if (this.heroX > 0) {\n        this.heroX -= .1;\n      } else if (this.heroX < 0) {\n        this.heroX += .1;\n      }\n      if (this.heroY > 0) {\n        this.heroY -= .1;\n      } else if (this.heroY < 0) {\n        this.heroY += .1;\n      }\n\n      stage.update();\n    }\n    return hero;\n  }\n\n  move() {\n    const nextX = this.pos[0] + 1;\n    const nextY = this.pos[1] + 1;\n    this.pos = [nextX, nextY];\n  }\n}\n\nmodule.exports = Hero;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/hero.js\n// module id = 2\n// module chunks = 0","\nclass Fish {\n  constructor(stage) {\n    this.fishX = -1;\n    this.size = this.randomSize();\n    this.fish = this.draw(stage);\n  }\n\n  randomSize() {\n    let size = Math.random();\n    if (size < .1) {\n      size += .1;\n    }\n    return size;\n  }\n\n  randomPosition(stage) {\n    let x = Math.floor(Math.random() + .5);\n    // console.log(x);\n    if (x === 1) {\n      x = stage.canvas.width;\n    }\n    const y = Math.random() * (stage.canvas.height-50);\n    return [x,y];\n  }\n\n  setVelocity(fish) {\n    // console.log(fish);\n    if (fish.x === 0) {\n      this.fishX = Math.random() * 4;\n      fish.rotation = 180;\n      fish.skewX = 180;\n      fish.x -= fish.width/2;\n    } else {\n      this.fishX = 0 - Math.random() * 4;\n    }\n    if (this.fishX <= 0) {\n      this.fishX -= .5;\n    } else {\n      this.fishX += .5;\n    }\n  }\n\n  draw(stage) {\n    const fish = new createjs.Bitmap(\"./images/transparent.png\");\n    fish.scaleX=this.size;\n    fish.scaleY=this.size;\n    fish.width = 100*this.size;\n    fish.height = 70*this.size;\n    const pos = this.randomPosition.bind(this)(stage);\n    fish.x = pos[0];\n    fish.y = pos[1];\n\n    this.setVelocity.bind(this)(fish);\n    stage.addChild(fish);\n    return fish;\n  }\n\n}\n\nmodule.exports = Fish;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/fish.js\n// module id = 3\n// module chunks = 0","const Util = {\n  collision (el, hero) {\n    // console.log(hero);\n    let heroCenterX;\n    let fishCenterX;\n    const heroCenterY = hero.hero.y + hero.hero.height/2.2;\n    const fishCenterY = el.fish.y + el.fish.height/2.2;\n    const fishWidth = el.fish.width;\n    const fishHeight = el.fish.height;\n    const heroWidth = hero.hero.width;\n    const heroHeight = hero.hero.height;\n    if (hero.hero.rotation === 0){\n      heroCenterX = hero.hero.x + hero.hero.width/2;\n    } else {\n      heroCenterX = hero.hero.x - hero.hero.width/2;\n    }\n    if (el.fish.rotation === 0){\n      fishCenterX = el.fish.x + el.fish.width/2;\n    } else {\n      fishCenterX = el.fish.x - el.fish.width/2;\n    }\n    if ((Math.abs(heroCenterX - fishCenterX) < (fishWidth/2.5 + heroWidth/2.5)) && (Math.abs(heroCenterY - fishCenterY) < (fishHeight/3 + heroHeight/3))) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  createFishBorder(el, stage) {\n    const fishWidth = el.fish.width;\n    const fishHeight = el.fish.height;\n    const fishBorder = new createjs.Shape();\n    if (el.fish.rotation === 0) {\n      fishBorder.graphics.beginStroke(\"white\").drawRect((el.fish.x + fishWidth/8), (el.fish.y + fishHeight/6 - fishHeight/20), (fishWidth/8*6), (fishHeight/3*2));\n    } else {\n      fishBorder.graphics.beginStroke(\"white\").drawRect((el.fish.x - (fishWidth/8)), (el.fish.y + fishHeight/6 - fishHeight/20), 0-(fishWidth/8*6), (fishHeight/3*2));\n    }\n    stage.addChild(fishBorder);\n    return fishBorder;\n  },\n  createHeroBorder(hero, stage) {\n    const heroWidth = hero.hero.width;\n    const heroHeight = hero.hero.height;\n    const heroBorder = new createjs.Shape();\n    if (hero.hero.rotation === 0) {\n      heroBorder.graphics.beginStroke(\"white\").drawRect((hero.hero.x + heroWidth/8), (hero.hero.y + heroHeight/6 - heroHeight/20), (heroWidth/8*6), (heroHeight/3*2));\n      // heroBorder.graphics.beginStroke(\"white\").drawRect(hero.hero.x, hero.hero.y, hero.hero.width, hero.hero.height);\n    } else {\n      heroBorder.graphics.beginStroke(\"white\").drawRect((hero.hero.x - heroWidth/8), (hero.hero.y + heroHeight/6 - heroHeight/20), (0-(heroWidth/8*6)), (heroHeight/3*2));\n      // heroBorder.graphics.beginStroke(\"white\").drawRect(hero.hero.x, hero.hero.y, (0-hero.hero.width), (hero.hero.height));\n    }\n    stage.addChild(heroBorder);\n    return heroBorder;\n  },\n  // Find the length of the vector.\n  norm (vec) {\n    return Util.dist([0, 0], vec);\n  },\n  // Return a randomly oriented vector with the given length.\n  randomVec (length) {\n  },\n  // Scale the length of a vector by the given amount.\n  scale (vec, m) {\n  },\n\n  wrap (el, stage) {\n    if (((el.fish.x - el.fish.width/2) > stage.canvas.width) || ((el.fish.x + el.fish.width/2) < 0)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nmodule.exports = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/util.js\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}